package alg;

import java.util.ArrayList;

public class BountyAlgorithm {
	private Bounty[][] startingBounties;
	private ArrayGrid<Integer> inputGrid;
	private int tileCount;
	private int xSize;
	private int ySize;
	
	private ArrayGrid<ArrayList<Bounty>[]> bountyGrid;
	
	public BountyAlgorithm(Bounty[][] startingBounties, ArrayGrid<Integer> inputGrid, int tileCount) {
		run(startingBounties, inputGrid, tileCount);
	}
	
	private void addNextBounty(Bounty bounty, int x, int y) {
		//System.out.println("Found "+bounty.value+" at "+x+","+y);
		Bounty nextBounty = bounty.next;
		
		if(nextBounty == null) {
			System.out.println("Matched at " + x + ", " + y);
			return;
		}
		
		int indexX = x + bounty.offset.x;
		int indexY = y + bounty.offset.y;
		
		if(!bountyGrid.inBounds(indexX, indexY))
			return;
		
		ArrayList<Bounty>[] bountyArr = bountyGrid.get(x,  y);
		
		if(bountyArr == null) {
			bountyArr = new ArrayList[tileCount];
			bountyGrid.set(x,  y, bountyArr);
			System.out.println("Got here");
		}
		
		ArrayList<Bounty> targetBounties = bountyArr[nextBounty.value];
		
		if(targetBounties == null) {
			targetBounties = new ArrayList<Bounty>();
			bountyArr[nextBounty.value] = targetBounties;
		}
		
		targetBounties.add(nextBounty);
	}
	
	private boolean bountyMatch(int currentCell, int x, int y) {
		ArrayList<Bounty>[] targetBounties = bountyGrid.get(x,  y);
		
		if(targetBounties != null && targetBounties[currentCell] != null)
			return true;
		
		if(startingBounties[currentCell] != null)
			return true;
		
		return false;
	}
	
	private void addNextBountiesAll(int matchCell, int x, int y) {
		ArrayList<Bounty>[] sourceBounties = bountyGrid.get(x,  y);
		
		if(sourceBounties != null && sourceBounties[matchCell] != null) {
			for(Bounty el : sourceBounties[matchCell]) {
				addNextBounty(el, x, y);
			}
		}
		
		Bounty[] sourceStarters = startingBounties[matchCell];
		
		if(sourceStarters != null) {
			for(Bounty el : sourceStarters) {
				addNextBounty(el, x, y);
			}
		}
	}
	
	public void run(Bounty[][] startingBounties, ArrayGrid<Integer> inputGrid, int tileCount) {
		this.startingBounties = startingBounties;
		this.inputGrid = inputGrid;
		this.tileCount = tileCount;
		xSize = inputGrid.xSize();
		ySize = inputGrid.ySize();
		
		bountyGrid = new ArrayGrid<>(xSize, ySize);
		
		for(int x = 0; x < xSize; x++) {
			for(int y = 0; y < ySize; y++) {
				int currentCell = inputGrid.get(x, y);
				if(bountyMatch(currentCell, x, y))
					addNextBountiesAll(currentCell, x, y);
			}
		}
	}
}
